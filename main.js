'use strict';
const fs = require('fs');//File System

// const buffer = new Buffer([63 ,0x6f ,0x6e ,0x73 ,0x74 ,0x20 ,0x6e ,0x61 ,0x6d ,0x65 ,0x73 ,0x20 ,0x3d ,0x20 ,0x5b ,0x27 ,0x4a ,0x61 ,0x62 ,0x69 ,0x6e ,0x27 ,0x2c ,0x20 ,0x27 ,0x4c ,0x65 ,0x6f ,0x6e ,0x27 ,0x2c ,0x20 ,0x27 ,0x41 ,0x6e ,0x73 ,0x75 ,0x27 ,0x5d ,0x3b ,0x0a ,0x0a ,0x0a ,0x63 ,0x6f ,0x6e ,0x73 ,0x74 ,0x20 ,0x63 ,0x75 ,0x73 ,0x74 ,0x6f ,0x6d ,0x54 ,0x6f ,0x53 ,0x74 ,0x72 ,0x69 ,0x6e ,0x67 ,0x20 ,0x3d ,0x20 ,0x62 ,0x75 ,0x66 ,0x66 ,0x65 ,0x72 ,0x20 ,0x3d ,0x3e ,0x20 ,0x7b ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x6c ,0x65 ,0x74 ,0x20 ,0x72 ,0x65 ,0x73 ,0x75 ,0x6c ,0x74 ,0x20 ,0x3d ,0x20 ,0x27 ,0x27 ,0x3b ,0x0a ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x62 ,0x75 ,0x66 ,0x66 ,0x65 ,0x72 ,0x2e ,0x66 ,0x6f ,0x72 ,0x45 ,0x61 ,0x63 ,0x68 ,0x28 ,0x28 ,0x61 ,0x72 ,0x72 ,0x29 ,0x20 ,0x3d ,0x3e ,0x20 ,0x7b ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x66 ,0x6f ,0x72 ,0x28 ,0x6c ,0x65 ,0x74 ,0x20 ,0x6a ,0x20 ,0x3d ,0x20 ,0x30 ,0x3b ,0x20 ,0x6a ,0x20 ,0x3c ,0x20 ,0x61 ,0x72 ,0x72 ,0x2e ,0x6c ,0x65 ,0x6e ,0x67 ,0x74 ,0x68 ,0x3b ,0x20 ,0x6a ,0x2b ,0x2b ,0x29 ,0x7b ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x72 ,0x65 ,0x73 ,0x75 ,0x6c ,0x74 ,0x20 ,0x2b ,0x3d ,0x20 ,0x61 ,0x72 ,0x72 ,0x2e ,0x63 ,0x68 ,0x61 ,0x72 ,0x43 ,0x6f ,0x64 ,0x65 ,0x41 ,0x74 ,0x28 ,0x6a ,0x29 ,0x2e ,0x74 ,0x6f ,0x53 ,0x74 ,0x72 ,0x69 ,0x6e ,0x67 ,0x28 ,0x31 ,0x36 ,0x29 ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x7d ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x72 ,0x65 ,0x73 ,0x75 ,0x6c ,0x74 ,0x20 ,0x2b ,0x3d ,0x20 ,0x27 ,0x20 ,0x27 ,0x3b ,0x0a ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x7d ,0x29 ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x72 ,0x65 ,0x74 ,0x75 ,0x72 ,0x6e ,0x20 ,0x72 ,0x65 ,0x73 ,0x75 ,0x6c ,0x74 ,0x3b ,0x0a ,0x7d ,0x3b ,0x0a ,0x0a ,0x66 ,0x73 ,0x2e ,0x77 ,0x72 ,0x69 ,0x74 ,0x65 ,0x46 ,0x69 ,0x6c ,0x65 ,0x28 ,0x60 ,0x24 ,0x7b ,0x5f ,0x5f ,0x64 ,0x69 ,0x72 ,0x6e ,0x61 ,0x6d ,0x65 ,0x7d ,0x2f ,0x6c ,0x6f ,0x6f ,0x70 ,0x2e ,0x6a ,0x73 ,0x60 ,0x2c ,0x20 ,0x6e ,0x61 ,0x6d ,0x65 ,0x73 ,0x2c ,0x20 ,0x28 ,0x65 ,0x72 ,0x72 ,0x6f ,0x72 ,0x29 ,0x20 ,0x3d ,0x3e ,0x20 ,0x7b ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x69 ,0x66 ,0x28 ,0x65 ,0x72 ,0x72 ,0x6f ,0x72 ,0x29 ,0x20 ,0x74 ,0x68 ,0x72 ,0x6f ,0x77 ,0x20 ,0x65 ,0x72 ,0x72 ,0x6f ,0x72 ,0x3b ,0x0a ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x20 ,0x63 ,0x6f ,0x6e ,0x73 ,0x6f ,0x6c ,0x65 ,0x2e ,0x65 ,0x72 ,0x72 ,0x6f ,0x72 ,0x28 ,0x65 ,0x72 ,0x72 ,0x6f ,0x72 ,0x29 ,0x3b ,0x0a ,0x0a ,0x7d ,0x29]);


const names = ['Jabin', 'Leon', 'Ansu'];

const buf = Buffer.alloc(names.length);


const customToString = buffer => {
    let result = '';

    buffer.forEach((arr) => {
        for(let j = 0; j < arr.length; j++){
            result += arr.charCodeAt(j).toString(16)
        }
        result += ' ';

    })
    return result;
};
//
fs.writeFile(`${__dirname}/loop.js`, names, buf, (error) => {
    if(error) throw error;
        console.error(error);

})



console.log(buf);
console.log(names);
console.log(names.toString());

